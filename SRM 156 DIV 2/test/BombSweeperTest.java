import org.junit.Test;
import static org.junit.Assert.*;

public class BombSweeperTest {
	
	@Test(timeout=2000)
	public void test0() {
		String[] board = new String[] {".....",
 ".....",
 "..B..",
 ".....",
 "....."};
		assertEquals(94.11764705882354, new BombSweeper().winPercentage(board), 1e-9);
	}
	
	@Test(timeout=2000)
	public void test1() {
		String[] board = new String[] {"BBBBB",
 "B...B",
 "B...B",
 "B...B",
 "BBBBB"};
		assertEquals(5.882352941176471, new BombSweeper().winPercentage(board), 1e-9);
	}
	
	@Test(timeout=2000)
	public void test2() {
		String[] board = new String[] {".........",
 ".B..B..B.",
 ".........",
 ".........",
 ".B..B..B.",
 ".........",
 ".........",
 ".B..B..B.",
 "........."};
		assertEquals(0.0, new BombSweeper().winPercentage(board), 1e-9);
	}
	
	@Test(timeout=2000)
	public void test3() {
		String[] board = new String[] {".........................",
 ".........................",
 ".........................",
 "........................."};
		assertEquals(100.0, new BombSweeper().winPercentage(board), 1e-9);
	}
	
	@Test(timeout=2000)
	public void test4() {
		String[] board = new String[] {"......B.......B..B...........................B....",
 "..............B..................BB..B............",
 "B.B.B.............B.....B..............B..........",
 "...................B...B....................BB....",
 "...B.....B.........................B.......B.....B",
 "B.B.........B.....B.......B..B......B.B...B.BB....",
 "..B...................BB...............B..........",
 ".........B...B................B..B................",
 ".......BB.......B....B................B.....BBB...",
 ".......BB..........B..............B......BB.......",
 "...................BB.....................B.......",
 "...B.B.B......B..............B...B......B.........",
 "B................B................................",
 "....B..........B.....B..BB....B...............BB..",
 "..B....B.....B.............B.....B............B...",
 "...................B.B........B..B.........B.B....",
 ".....B.....B......................................",
 "...........BB......BB...B.B........B...B..........",
 ".....BBB..........................................",
 ".B...........B....B...BB......B......B...B.B......",
 "..................B........BB................B....",
 "...............................B..B....BBB.B....B.",
 "..........B.......................................",
 ".....B..........B....BB......B.B......B......B....",
 ".....B..................B........B................",
 "............B.....B..B....BB...B....BB........B...",
 "..B.................B.........B...................",
 ".BB..............B................................",
 "...B....B..................B.................B....",
 "......B...B......B......................B.B.......",
 "..............B..................B.......B........",
 ".....B........BB...B.....B........................",
 ".......B......B.B..B..........B...........B....B..",
 "B...B...........B...B...B......B.B...B..B......B..",
 "....B..B.....B.B.......BB..B............B.B....B..",
 "B.......B..........B.........B...B.BB......B......",
 "....B...............................B.............",
 ".....B.B..........................................",
 "..........B............B......B.B..B....B.........",
 "....B...B.......................B.................",
 "B.................B...........B..B....B...........",
 "...B.....B........................................",
 "...B..B......................................BBB..",
 ".B...B....................................B....B..",
 "...B...B..........B...B.B.........................",
 ".....B.............B...BB..........B..BBB.BB......",
 "....................B.....B.......................",
 "........B..BB..........B.B....B...........B......B",
 ".........B.....BB..B.............B....BB..........",
 "....B..B..............B...B..B..........B........."};
		assertEquals(77.67558528428094, new BombSweeper().winPercentage(board), 1e-9);
	}
}
