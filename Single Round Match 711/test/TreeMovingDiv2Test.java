import org.junit.Test;
import static org.junit.Assert.*;

public class TreeMovingDiv2Test {
	
	@Test(timeout=2000)
	public void test0() {
		int n = 3;
		int[] roots = new int[] {0, 2};
		int[] a = new int[] {1, 2};
		int[] b = new int[] {1, 0};
		int[] c = new int[] {3, 5};
		assertEquals(2, new TreeMovingDiv2().count(n, roots, a, b, c));
	}
	
	@Test(timeout=2000)
	public void test1() {
		int n = 3;
		int[] roots = new int[] {0, 0, 1};
		int[] a = new int[] {6, 1, 3};
		int[] b = new int[] {6, 5, 5};
		int[] c = new int[] {2, 5, 9};
		assertEquals(2, new TreeMovingDiv2().count(n, roots, a, b, c));
	}
	
	@Test(timeout=2000)
	public void test2() {
		int n = 5;
		int[] roots = new int[] {0, 1, 1, 1, 2};
		int[] a = new int[] {7, 4, 7, 9, 2};
		int[] b = new int[] {8, 3, 9, 5, 3};
		int[] c = new int[] {6, 0, 1, 5, 9};
		assertEquals(22, new TreeMovingDiv2().count(n, roots, a, b, c));
	}
	
	@Test(timeout=2000)
	public void test3() {
		int n = 2;
		int[] roots = new int[] {1, 0, 0};
		int[] a = new int[] {122064284, 9662111, 120616497};
		int[] b = new int[] {20137061, 408976122, 494878172};
		int[] c = new int[] {242061783, 603049107, 805670429};
		assertEquals(1, new TreeMovingDiv2().count(n, roots, a, b, c));
	}
	
	@Test(timeout=2000)
	public void test4() {
		int n = 15;
		int[] roots = new int[] {11, 3, 13, 5, 0, 3, 0, 8, 9, 4, 9, 7, 5, 12, 12, 11, 12, 2, 6, 5, 13, 13, 11, 8, 14, 9, 2, 0, 3, 11, 10, 12, 10, 11, 11, 12, 13, 7, 12, 11, 2, 14, 8, 3, 6, 6, 4, 13, 5, 8};
		int[] a = new int[] {983816220, 620877501, 728957664, 719453482, 891241034, 959047323, 459235325, 188837384, 749336264, 40650017, 404049008, 121578182, 640967952, 444329307, 181115164, 697849277, 12923013, 711014676, 308063158, 403714366, 341206103, 674610097, 743172147, 27978413, 95548595, 93823839, 844476902, 863583697, 568069127, 618319911, 659846531, 341309147, 735202433, 531047579, 967335611, 311192666, 753647731, 36420180, 609571991, 208600401, 915548304, 926479460, 672275772, 545217041, 864561330, 32472050, 852336473, 144521601, 383750815, 616511468};
		int[] b = new int[] {715457951, 308091233, 686233659, 523365634, 260145657, 96581518, 754153775, 622990522, 78662953, 689973864, 609423534, 534351235, 56822117, 899080526, 236413795, 747521954, 249656307, 790813221, 238598034, 203856426, 170015231, 791645278, 991710627, 747864180, 331241135, 416320805, 820623220, 811261319, 154661650, 914880513, 270905767, 954448019, 261442212, 954262444, 293791600, 493225233, 67542211, 911866345, 567575019, 95716070, 410883122, 337767450, 375732581, 616839717, 416849487, 140196829, 200763187, 51759408, 992789421, 882490836};
		int[] c = new int[] {650915191, 363659051, 226659197, 706291662, 748630395, 163284394, 663006670, 2890697, 639793395, 728890798, 570088430, 967259303, 101778889, 249725396, 968816738, 276471315, 905010209, 467925249, 798793109, 857289233, 494026470, 476417587, 98570430, 596160845, 211373787, 188742439, 364805067, 757845257, 317224756, 74104796, 455729968, 78933290, 769895010, 476555278, 45379277, 957039727, 395817921, 447349376, 629724490, 287334171, 227424105, 603337884, 467060652, 254067677, 237332026, 976429932, 93075762, 960441433, 132935737, 671265490};
		assertEquals(755767349, new TreeMovingDiv2().count(n, roots, a, b, c));
	}
}
